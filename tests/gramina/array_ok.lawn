struct Vector2 {
    float x;
    float y;
}

fn Thing() {
    Vector2 v;
    v.x = 23;
}

#extern("sqrtf")
fn Sqrtf(float x) -> float;

#extern("exit")
fn Exit(int status);

// fn PrintFloat(float x);

fn BatchLen(const Vector2[8]& vecs) -> float[8] {
    float[8] out;

    for ulong i = 0u; i < 8u; i = i + 1u {
        const Vector2& v = &(@vecs)[i];
        out[0] = Sqrtf(v.x * v.x + v.y * v.y);
    }

    return out;
}

#extern("_start")
fn Main() {
    Vector2[8] positions;

    positions[0].x = 1;
    positions[0].y = 1;

    float[8] lengths = BatchLen(&positions);

    for ulong i = 0u; i < 8u; i = i + 1u {
        float f = lengths[i];
        // PrintFloat(f);
    }

    Exit(0);
}
